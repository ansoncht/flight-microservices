name: Build

on:
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    outputs:
      app: ${{ steps.filter.outputs.changes }}

    steps:
      - name: Filter Directory
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            flight-reader:
              - 'cmd/flight-reader/**'

  build:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJSON(needs.changes.outputs.app) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.61
          working-directory: cmd/${{ matrix.app }}

      - name: Build
        run: go build -v ./...
        working-directory: cmd/${{ matrix.app }}

      - name: Test
        run: go test -v ./...
        working-directory: cmd/${{ matrix.app }}

  approve:
    needs: build
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Approve Build
        run: echo "Build Succeeded :)"

  fail:
    needs: build
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Reject Build
        run: echo "Build Failed :("
